name: CommandPlus
version: 0.23
main: com.eric0210.commandplus.CommandPlus
description: Upgraded commands for command block
author: eric0210_
commands:
  damageDealt:
    description: "지정된 대상(들)의 주는 피해량을 바꿉니다"
    usage: "/damagedealt <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <주는 피해량 백분율>"
  damageTook:
    description: "지정된 대상(들)의 받는 피해량을 바꿉니다"
    usage: "/damagetook <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <받는 피해량 백분율>"
  flightAllowed:
    description: "지정된 대상(들)이 날 수 있는가의 여부(flightAllowed)를 바꿉니다"
    usage: "/flightAllowed <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <날 수 있는지의 여부>"
  flying:
    description: "지정된 대상(들)이 날고 있는가의 여부(flying)를 바꿉니다"
    usage: "/flying <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <날고 있는지의 여부>"
  maxhealth:
    description: "지정된 대상(들)의 최대 체력을 지정합니다"
    usage: "/maxhealth <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <최대 체력(기본값: 20)>"
  foodlevel:
    description: "지정된 대상(들)의 배고픔 수치를 바꿉니다"
    usage: "/foodlevel <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <배고픔 수치(기본값: 20)>"

  velocity:
    description: "지정된 대상(들)에게 지정된 방향으로 지정된 속도만큼 가속(velocity)을 (set 모드: 줍니다; add 모드: 추가합니다)"
    usage: "/velocity <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <x축 가속> <y축 가속> <z축 가속>"
  compassTarget:
    description: "지정된 대상(들)의 나침반 목표(기본값: 스폰 지점)을 바꿉니다"
    usage: "/compassTarget <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <x> <y> <z>"

  testforItem:
    description: "블럭 모드: 지정된 블록(인벤토리를 가지는 블록이어야 함)의 인벤토리의 지정된 슬롯을(슬롯을 지정하는 칸에 (slot.)container.all 을 입력했을 경우, 인벤토리의 모든 슬롯을) 확인하여 지정된 아이템이 존재하는지의 여부를 검사합니다; 엔티티 모드: 지정된 엔티티(인벤토리를 가지는 엔티티이어야 함)(들)의 인벤토리의 지정된 슬롯을 확인하여, (and모드: 모든 | or모드: 하나 이상의) 엔티티의 인벤토리에 지정된 아이템이 존재하는지의 여부를 검사합니다. [주의: 아이템 수량에는 비교 연산자를 사용할 수 있습니다(예시: '>5'의 경우 해당 아이템이 6개 이상 존재하면 true를 리턴) ; 아이템 수량은 최대 64개 까지 지원되며, 그 초과는 지원되지 않습니다!]"
    usage: "블록 모드: /testforitem block <x> <y> <z> <슬롯 ID> <아이템 이름> [아이템 수량] [아이템 데이터] [아이템 데이터 태그...]; (인벤토리를 가지고 있는)엔티티의 경우: /testforitem entity <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <and|or> <슬롯 ID> <아이템 이름> [아이템 수량] [아이템 데이터] [아이템 데이터 태그...]"
  testforHeldItem:
    description: "지정된 대상(들) 중, (and모드: 모든 | or모드: 하나 이상의) 엔티티가 지정된 아이템들 손에 들고 있는지 검사합니다"
    usage: "/testforhelditem <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <and|or> <아이템 이름> [아이템 수량] [아이템 데이터] [아이템 데이터 태그...]"

  collectSignal:
    description: "아날로그 모드: 지정된 블록에서 내보내는 레드스톤 비교기로 구할 수 있는 아날로그 출력의 세기를 구한 후, 커맨드 블록의 아날로그 출력(레드스톤 비교기로 구할 수 있음)으로 내보냅니다; 디지털 모드: 아날로그 모드와는 달리 블록에 직접적으로 가해지는 신호만을 구해 커맨드 블록의 아날로그 출력으로 내보냅니다."
    usage: "/collectSignal <analog|digital> <x> <y> <z>"

  openInventory:
    description: "지정된 컨테이너 블록(상자, 화로, 모루 등 인벤토리를 가지는 블록)을 지정된 플레이어(들)이 손 대지 않고 열게 합니다."
    usage: "/openInventory <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <x> <y> <z>"
  holditem:
    description: "슬롯 모드: 강제로 플레이어(들)이 지정된 핫바 슬롯을 선택하게 합니다; 아이템 모드: 강제로 플레이어(들)의 핫바 슬롯에서 지정된 아이템을 찾아, 찾은 아이템의 핫바 슬롯을 선택하게 합니다. 해당 아이템을 핫바 슬롯에서 찾지 못한 플레이어들에게는 적용되지 않습니다."
    usage: "슬롯 모드: /holditem <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> slot <hotbar slot>; 아이템 모드: /helditem <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> item <itemName> [amount] [data] [dataTags...]"

  tp+:
    description: "에센셜 플러그인이 지원하지 않는 타겟 셀렉터(@a, @p 등등...)과 x, y, z, yaw, pitch값 앞에 붙일 수 있는 '~' 문자(값 상대화, 예시: 'y: ~5'는 대상의 위치(tp+ 커맨드가 적용된 엔티티의 위치)로부터 5블록만큼 위쪽을 뜻함)를 지원하는 tp 커맨드입니다."
    usage: "/tp+ <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <x> <y> <z> [yaw] [pitch]"
  clear+:
    description: "특정한 아이템만 선택적으로 인벤토리에서 제거할 수 있는 /clear 명령어의 업그레이드 버전입니다"
    usage: "/clear+ <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <아이템 이름> [아이템 수량] [아이템 데이터] [아이템 데이터 태그...]"

  # Ban-Command
  banCommand:
    description: "특정 명령어를 지정된 플레이어(들)이 사용하지 못하게 제한합니다."
    usage: "/bancommand <명령어 (앞의 '/' 문자 포함)> (예시: /bancommand /op -> /op 명령어를 사용하지 못하게 합니다)"
  unbanCommand:
    description: "특정 명령어를 지정된 플레이어(들)이 사용하지 못하게 제한한 것을 해제합니다."
    usage: "/unbancommand <명령어 (앞의 '/' 문자 포함)> (예시: /unbancommand /op -> /op 명령어를 다시 사용할 수 있게 합니다)"

  target:
    description: "지정된 블록의 위치를 메모리에 잠시 저장합니다. /gettarget문으로 불러올 수 있습니다. (/tp, /setblock 등의 명령어를 입력할 때, 목표 위치를 지정하는 데 도움이 될 수 있습니다)"
    usage: "/target <facingPos|currentPos> [key name]"
  gettarget:
    description: "저장된 목표 위치를 불러와 채팅창에 띄웁니다."

  mount:
    description: "지정된 대상들 중 이동 수단을 타고 있지 않은 대상들을 각각 생성된 이동 수단에 강제로 타게 합니다. dismountable를 true로 지정한 경우, 이 플레이어는 /dismount 명령에 의해서만 해당 이동 수단에서 내릴 수 있습니다."
    usage: "/mount <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <minecart|boat> <invisibleVehicle: yes|no> <x> <y> <z> [dismountable: yes|no (default: no)] [speed (default: 0.4)]"
  dismount:
    description: "지정된 대상들 중 이동 수단을 타고 있는 대상들을 모두 강제로 해당 이동 수단에게서부터 내쫒습니다(내리게 합니다). 만약 해당 이동 수단이 /mount 명령에 의해  생성된 이동 수단이라면, 해당 이동 수단은 이때 제거됩니다."
    usage: "/dismount <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)>"

  chunkload:
    description: "load: 해당 범위의 청크(들)을(를) '한 번' 로드합니다 | unload: 해당 범위의 청크(들)을(를) '한 번' 언로드합니다 | start: 해당 청크(들)이(가) 언로드되지 않도록 보호합니다 | stop: 해당 청크(들)이(가) 언로드되지 않도록 보호하고 있던 것을 중지합니다 | refresh: 해당 청크(들)을(를) 리프레시합니다 ; generate 값은 만약 해당 청크가 생성되지조차 않았을 시, 강제로 해당 청크를 생성시킬지의 여부를 뜻합니다 ; safe 값은 '만약 청크가 사용중일 시, 언로드하지 말지'의 여부를 뜻합니다; 주의: Chunk X와 Chunk Z는 '블록 좌표' 기준이 아니라 '청크 좌표' 기준이라는 것을 명심하십시오(예시: (0, 0, 0) ~ (15, 255, 15)까지는 청크 0, 0 에 해당합니다; 청크 범위를 입력할 때, 1번과 2번 위치 중 어느 것에 더 크고 어느 것에 더 작은 숫자를 넣어야 하는지는 딱히 제한이 없습니다)"
    usage: "/chunkload <load|start> <chunk x 1> <chunk z 1> <chunk x 2> <chunk z 2> [generate: yes|no (default: no)] 또는 /chunkload unload <chunk x 1> <chunk z 1> <chunk x 2> <chunk z 2> [safe: yes|no (default: no)] 또는 /chunkload <refresh|stop> <chunk x 1> <chunk z 1> <chunk x 2> <chunk z 2>"

  queryInteract:
    description: "만약 <signalLength>ms 이내에 지정된 블록이 플레이어(들)에 의해 상호작용된 기록이 존재하면, 아날로그 레드스톤 출력을 내보냅니다."
    usage: "/queryinteract <대상 이름/UUID|타겟 셀렉터(@a, @p 등등...)> <x> <y> <z> <signalLength>"

